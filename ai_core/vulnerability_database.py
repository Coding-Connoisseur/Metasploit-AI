# ai_core/vulnerability_database.py

import requests

class VulnerabilityDatabase:
    def __init__(self, ai):
        self.ai = ai
        self.api_url = "https://cve.circl.lu/api/search/"

    def check_vulnerabilities(self, args):
        target = args[0]
        software = args[1] if len(args) > 1 else None
        if software:
            return self.query_vulnerability_database(software)
        else:
            return "No software specified for vulnerability check."

    def query_vulnerability_database(self, software):
        url = f"{self.api_url}{software}"
        try:
            response = requests.get(url)
            if response.status_code == 200:
                vulns = response.json()
                self.ai.logging_manager.log_info(f"Found {len(vulns)} vulnerabilities for {software}")
                return f"Found {len(vulns)} vulnerabilities for {software}"
            else:
                return "Error querying the vulnerability database."
        except Exception as e:
            self.ai.logging_manager.log_error(f"Error querying vulnerability database: {e}")
            return f"Error querying vulnerability database: {e}"